buildscript {
	repositories {
		maven { url = 'https://files.minecraftforge.net/maven' }
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
	}
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'
//----------------------------------------------------------------------------------------------------------------------

version = '2.0.0'
group = 'flaxbeard.immersivepetroleum'
archivesBaseName = 'immersivepetroleum'

repositories {
	maven {	name = "BlameJared";	url = "https://maven.blamejared.com/" }	   // IE files
	maven { name = "DVS1 Maven FS"; url "https://dvs1.progwml6.com/files/maven" } // JEI & Tinkers
}

sourceSets {
	main {
		resources {
			srcDirs = [
				"$rootDir/src/main/resources",
				"$rootDir/src/generated/resources"
			]
		}
	}
}

minecraft {
	mappings channel: 'snapshot', version: '20200112-1.14.3'
	accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
	
	runs {
		client {
			workingDirectory project.file('run')
			property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
			property 'forge.logging.console.level', 'info'
			property 'fml.earlyprogresswindow', 'false'
			mods {
				immersivepetroleum {
					source sourceSets.main
				}
			}
		}

		server {
			workingDirectory project.file('run')
			property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
			property 'forge.logging.console.level', 'info'
			property 'fml.earlyprogresswindow', 'false'
			mods {
				immersivepetroleum {
					source sourceSets.main
				}
			}
		}

		data {
			workingDirectory project.file('run')
			property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
			property 'forge.logging.console.level', 'info'
			property 'fml.earlyprogresswindow', 'false'
			
			args '--mod', 'immersivepetroleum', '--all', '--output', file('src/generated/resources/'), '--validate', '--existing', sourceSets.main.resources.srcDirs[0], '--existing', 'C:/Users/TwistedGate/.gradle/caches/forge_gradle/deobf_dependencies/blusunrize/immersiveengineering/ImmersiveEngineering/1.14.4-4.0.0-116_mapped_snapshot_20200112-1.14.3/ImmersiveEngineering-1.14.4-4.0.0-116_mapped_snapshot_20200112-1.14.3.jar'
			// The end on the line above is required for data generation, the location should only require a "nickname" change
			
			// V Check if the locations match by just pasting it (minus the jar) into explorer V
			// C:/Users/UserNameHere/.gradle/caches/forge_gradle/deobf_dependencies/blusunrize/immersiveengineering/ImmersiveEngineering/0.14-95-190fba3c_mapped_snapshot_20190719-1.14.3/"
			
			mods {
				immersivepetroleum {
					source sourceSets.main
				}
			}
		}
	}
}

dependencies {
	minecraft "net.minecraftforge:forge:1.14.4-28.2.16"
	compile fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:1.14.4-4.0.0-116")
	runtimeOnly fg.deobf("mezz.jei:jei-1.14.4:6.0.0.11")
	compileOnly fg.deobf("mezz.jei:jei-1.14.4:6.0.0.11:api")
}

jar {
	manifest {
		attributes([
			"Specification-Title": "immersivepetroleum",
			"Specification-Vendor": "flaxbeard",
			"Specification-Version": "1",
			"Implementation-Title": project.name,
			"Implementation-Version": "${version}",
			"Implementation-Vendor" :"flaxbeard",
			"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}

def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) { type 'jar'; builtBy 'reobfJar'; }

publishing {
	publications { mavenJava(MavenPublication) { artifact reobfArtifact } }
	repositories { maven { url "file:///${project.projectDir}/mcmodsrepo" } }
}
